// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Electrolux.ShopFloor.Mvvm.ViewModels;
using GalaSoft.MvvmLight.Helpers;
using Electrolux.ShopFloor.Middleware.Contract;
using Electrolux.ShopFloor.iOS.Services.Providers;
//using HockeyApp.iOS;

namespace Electrolux.ShopFloor.iOS.ViewControllers
{
	public partial class SplashViewController : BaseViewController<SplashViewModel>
	{
		public SplashViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
#if !PROD
			//IAppConfig config = RegistryService.Instance.Resolve<IAppConfig>();
   //         if (config.IsHockeyAppActive)
   //         {
			//	BITHockeyManager.SharedHockeyManager.FeedbackManager.RequireUserName = BITFeedbackUserDataElement.Required;
			//	BITHockeyManager.SharedHockeyManager.FeedbackManager.RequireUserEmail = BITFeedbackUserDataElement.Required;
			//	BITHockeyManager.SharedHockeyManager.FeedbackManager.ShowAlertOnIncomingMessages = true;
			//}
#endif
		}

        public override async void ViewDidAppear(bool animated)
        {
            if (!AppDelegate.IsInitialized)
            {
                await AppDelegate.CreateLocatorAsync(this.NavigationController);
                AppDelegate.InitializeNavigationService(this.NavigationController);
                AppDelegate.InitApp(this.NavigationController);

                this.KeepBindingInMemoryLocal(new Binding<string, string>(ViewModel, () => ViewModel.Version, this, () => this.versionNumberLabel.Text));
                this.KeepBindingInMemoryLocal(new Binding<bool, bool>(ViewModel, () => ViewModel.IsStaging, this, () => this.isStagingLabel.Hidden)
                                              .ConvertSourceToTarget((arg) => !arg));
            }
            base.ViewDidAppear(animated);
        }
	}
}
