// This file has been autogenerated from a class added in the UI designer.

using System;
using Electrolux.ShopFloor.iOS.ViewControllers;
using Electrolux.ShopFloor.Middleware.Manager;
using Electrolux.ShopFloor.Mvvm.ViewModels;
using Electrolux.ShopFloor.Mvvm.ViewModels.EditingAreas;
using Electrolux.ShopFloor.Mvvm.ViewModels.Units;
using Foundation;
using UIKit;

namespace Electrolux.ShopFloor.iOS
{
	public partial class FloorspaceCompetitorsViewController : ListBaseViewController<CompetitorsFloorSpaceViewModel, FloorSpaceCompetitorUnit>
	{
		public FloorspaceCompetitorsViewController (IntPtr handle) : base (handle)
		{
		}

		protected override string CellName
		{
			get { return "FloorspaceCompetitorsTableViewCell"; }
		}

		public override void Translations()
		{
			this.modelHeaderLabel.Text = TranslatorManager.GetInstance().GetString("Model/Category");
			this.brandHeaderLabel.Text = TranslatorManager.GetInstance().GetString("Competitor Brand");
			this.qtyOnDisplayHeaderLabel.Text = TranslatorManager.GetInstance().GetString("Quantity On Display");
			this.categoryHeaderLabel.Text = TranslatorManager.GetInstance().GetString("Category");
			this.oldEnergyClassHeaderLabel.Text = TranslatorManager.GetInstance().GetString("Old Energy Class");
			this.priceHeaderLabel.Text = TranslatorManager.GetInstance().GetString("Price");
			this.updateEnergyClassHeaderLabel.Text = TranslatorManager.GetInstance().GetString("New Energy Class");
		}

		public override void BindTaskCell(UITableViewCell cell, FloorSpaceCompetitorUnit item, NSIndexPath path)
		{
			base.BindTaskCell(cell, item, path);

			FloorspaceCompetitorsTableViewCell listCell = cell as FloorspaceCompetitorsTableViewCell;

			listCell.ModelLabel.Text = item?.ModelText;
			listCell.BrandLabel.Text = item?.Brand?.Text;
			listCell.QtyOnDisplayLabel.Text = item?.QuantityInEvidence.ToString();
			listCell.CategoryLabel.Text = item?.Category.Text;
			listCell.OldEnergyClassLabel.Text = item?.OldEnergyLabel != null ? item?.OldEnergyLabel.Text : "";
			listCell.PriceLabel.Text = item?.Price != null ? item?.Price.Value.ToString(ViewModel.ApplicationController.Culture) : "0";
			listCell.UpdateEnergyClassLabel.Text = item?.NewEnergyLabel != null ? item?.NewEnergyLabel.Text : "";
		}
	}
}
