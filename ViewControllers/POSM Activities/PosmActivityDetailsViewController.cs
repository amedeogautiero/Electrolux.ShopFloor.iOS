// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Electrolux.ShopFloor.iOS.ViewControllers;
using Electrolux.ShopFloor.Middleware.Manager;
using Electrolux.ShopFloor.Mvvm.ViewModels;
using Electrolux.ShopFloor.Mvvm.ViewModels.EditingAreas;
using Electrolux.ShopFloor.Mvvm.ViewModels.Units;
using Foundation;
using GalaSoft.MvvmLight.Helpers;
using UIKit;
using System.Collections.Generic;

namespace Electrolux.ShopFloor.iOS
{
	public partial class PosmActivityDetailsViewController : ListDetailBaseViewController<PosmActivitiesViewModel>
	{

		private PopoverViewController<ModelCategoryUnit> modelCategoryPopoverController;
		private PopoverViewController<BrandUnit> brandPopoverController;
		private PopoverViewController<ActivityModelUnit> posmCampaignPopoverController;
		private PopoverViewController<ActivityModelUnit> posmMaterialPopoverController;
		private PopoverViewController<ActivityModelUnit> posmActivityPopoverController;


		public PosmActivityDetailsViewController(IntPtr handle) : base(handle)
		{
		}

		public override void Translations()
		{
			this.modelCategoryLabel.Text = TranslatorManager.GetInstance().GetString("Model/Category");
			this.brandLabel.Text = TranslatorManager.GetInstance().GetString("Brand");
			this.posmMaterialLabel.Text = TranslatorManager.GetInstance().GetString("POSM Material");
			this.posmCampaignLabel.Text = TranslatorManager.GetInstance().GetString("POSM Campaign");
			this.posmActivityLabel.Text = TranslatorManager.GetInstance().GetString("POSM Activity");

			this.modelCategoryTextField.Placeholder = TranslatorManager.GetInstance().GetString("Mandatory");
			this.brandTextField.Placeholder = TranslatorManager.GetInstance().GetString("Mandatory");
			this.posmMaterialTextField.Placeholder = TranslatorManager.GetInstance().GetString("Mandatory");
			this.posmCampaignTextField.Placeholder = TranslatorManager.GetInstance().GetString("Mandatory");
			this.posmActivityTextField.Placeholder = TranslatorManager.GetInstance().GetString("Mandatory");
		}

		public override void ConfigureArea()
		{
			base.ConfigureArea();

			#region Behaviors

			#region Model/Category

			this.modelCategoryTextField.ShouldChangeCharacters += (textField, range, replacementString) =>
			{
				var newContent = new NSString(textField.Text).Replace(range, new NSString(replacementString)).ToString();
				if (newContent.Length > this.AreaViewModel.ApplicationController.SearchThreshold)
				{
					modelCategoryPopoverController.ShowPopover(this.modelCategoryTextField);
				}
				else
				{
					modelCategoryPopoverController.DismissPopover();
				}
				return true;
			};


			this.modelCategoryPopoverController = new PopoverViewController<ModelCategoryUnit>(
				this.AreaViewModel.Models,
				new CGSize(this.modelCategoryTextField.Frame.Size.Width, 320f),
				"ModelCategoryTableViewCell",
				UIPopoverArrowDirection.Left,
				(UITableViewCell cell) =>
				{
					if (cell is ModelCategoryTableViewCell)
					{
						ModelCategoryUnit item = ((ModelCategoryTableViewCell)cell).Item;
						this.AreaViewModel.Model = item.Text;
						this.AreaViewModel.SelectedModel = item;
						this.modelCategoryTextField.ResignFirstResponder();
					}
					this.modelCategoryPopoverController.DismissPopover();
				}
			);

			#endregion

			#region Brand

			this.brandTextField.ShouldChangeCharacters += (textField, range, replacementString) =>
			{
				var newContent = new NSString(textField.Text).Replace(range, new NSString(replacementString)).ToString();
				if (newContent.Length > this.AreaViewModel.ApplicationController.SearchThreshold)
				{
					brandPopoverController.ShowPopover(this.brandTextField);
				}
				else
				{
					brandPopoverController.DismissPopover();
				}
				return true;
			};

			this.brandPopoverController = new PopoverViewController<BrandUnit>(
				this.AreaViewModel.Brands,
				new CGSize(this.brandTextField.Frame.Size.Width, 320f),
				"BrandTableViewCell",
				UIPopoverArrowDirection.Right,
				(UITableViewCell cell) =>
				{
					if (cell is BrandTableViewCell)
					{
						this.AreaViewModel.SelectedBrandModel = ((BrandTableViewCell)cell).Item;

						this.brandPopoverController.DismissPopover();
						this.brandTextField.ResignFirstResponder();
					}
				}
			);

			#endregion

			#region Campagna POSM

			this.posmCampaignTextField.ShouldBeginEditing += (UITextField textField) =>
			{
				posmCampaignPopoverController.ShowPopover(textField);
				return false;
			};

			posmCampaignPopoverController = new PopoverViewController<ActivityModelUnit>(
				this.AreaViewModel.Campaigns,
				new CGSize(this.posmCampaignTextField.Frame.Size.Width, 320f),
				"ActivityViewCell",
				UIPopoverArrowDirection.Any,
				(UITableViewCell cell) =>
				{
					if (cell is ActivityViewCell)
					{
						this.AreaViewModel.SelectedCampaign = ((ActivityViewCell)cell).Item;
						posmCampaignPopoverController.DismissPopover();
					}
				}
			);

			#endregion

			#region Materiale POSM

			this.posmMaterialTextField.ShouldBeginEditing += (UITextField textField) =>
			{
				posmMaterialPopoverController.ShowPopover(textField);
				return false;
			};

			posmMaterialPopoverController = new PopoverViewController<ActivityModelUnit>(
				this.AreaViewModel.Materials,
				new CGSize(this.posmMaterialTextField.Frame.Size.Width, 320f),
				"ActivityViewCell",
				UIPopoverArrowDirection.Any,
				(UITableViewCell cell) =>
				{
					if (cell is ActivityViewCell)
					{
						this.AreaViewModel.SelectedMaterial = ((ActivityViewCell)cell).Item;
						posmMaterialPopoverController.DismissPopover();
					}
				}
			);

			#endregion

			#region AttivitÃ  POSM

			this.posmActivityTextField.ShouldBeginEditing += (UITextField textField) =>
			{
				posmActivityPopoverController.ShowPopover(textField);
				return false;
			};

			posmActivityPopoverController = new PopoverViewController<ActivityModelUnit>(
				this.AreaViewModel.Activities,
				new CGSize(this.posmActivityTextField.Frame.Size.Width, 320f),
				"ActivityViewCell",
				UIPopoverArrowDirection.Any,
				(UITableViewCell cell) =>
				{
					if (cell is ActivityViewCell)
					{
						this.AreaViewModel.SelectedActivity = ((ActivityViewCell)cell).Item;
						posmActivityPopoverController.DismissPopover();
					}
				}
			);

			#endregion

			#endregion
		}

		public override void RegisterBindingsLocal()
		{
			base.RegisterBindingsLocal();

			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.Model, this, () => this.modelCategoryTextField.Text, BindingMode.TwoWay));
			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.ModelErrorMessage, this, () => this.modelCategoryMessageLabel.Text));
			KeepBindingInMemoryLocal(this.SetBinding(() => this.AreaViewModel.ModelWarnMessage).WhenSourceChanges(() =>
			{
				if (!String.IsNullOrWhiteSpace(this.AreaViewModel.ModelWarnMessage))
				{
					this.modelCategoryMessageLabel.Text = this.AreaViewModel.ModelWarnMessage;
				}
			}));

			KeepBindingInMemoryLocal(new Binding<bool, bool>(this.AreaViewModel, () => this.AreaViewModel.CanEditBrandModel, this, () => this.brandTextField.UserInteractionEnabled, BindingMode.TwoWay));

			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.BrandName, this, () => this.brandTextField.Text, BindingMode.TwoWay));
			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.BrandErrorMessage, this, () => this.brandMessageLabel.Text));

			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.SelectedActivity.Text, this, () => this.posmActivityTextField.Text, BindingMode.OneWay));
			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.ActivityErrorMessage, this, () => this.posmActivityMessageLabel.Text));

			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.SelectedCampaign.Text, this, () => this.posmCampaignTextField.Text, BindingMode.OneWay));
			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.CampaignErrorMessage, this, () => this.posmCampaignMessageLabel.Text));

			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.SelectedMaterial.Text, this, () => this.posmMaterialTextField.Text, BindingMode.OneWay));
			KeepBindingInMemoryLocal(new Binding<string, string>(this.AreaViewModel, () => this.AreaViewModel.MaterialErrorMessage, this, () => this.posmMaterialMessageLabel.Text));

		}
	}

}
