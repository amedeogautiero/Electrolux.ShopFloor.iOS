// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.ObjectModel;
using Electrolux.ShopFloor.iOS;
using Electrolux.ShopFloor.iOS.ViewControllers;
using Electrolux.ShopFloor.Middleware.Model.UI;
using Electrolux.ShopFloor.Mvvm.ViewModels;
using Electrolux.ShopFloor.Mvvm.ViewModels.EditingAreas;
using Foundation;
using GalaSoft.MvvmLight.Helpers;
using UIKit;
using System.Timers;

namespace Electrolux.ShopFloor.iOS
{
	public partial class FSElectroluxModelSearchViewController : UIViewController
	{
		public Action<UITableViewCell> ItemSelected { get; set; }
		public ElectroluxFloorSpaceViewModel AreaViewModel { get; set; }
		private Timer timer;

		public FSElectroluxModelSearchViewController(IntPtr handle) : base(handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			timer = new Timer(1000);
			timer.AutoReset = false;
			timer.Elapsed += (object sender, ElapsedEventArgs e) =>
			{
				InvokeOnMainThread(() =>
				{
					this.AreaViewModel.ModelName = this.modelSearchBar.Text;
					if (this.modelSearchBar.Text.Length > AreaViewModel.ApplicationController.SearchThreshold)
					{
						this.activityIndicator.StartAnimating();
					}
				});
			};

			BaseTableViewSource<ModelModel> source = new BaseTableViewSource<ModelModel>(AreaViewModel.FilteredModels, tableView, "FSElectroluxModelSearchViewCell");
			source.ItemSelected = (UITableViewCell obj) =>
			{
				this.ItemSelected(obj);
			};
			source.CollectionChanged = () =>
			{
				InvokeOnMainThread(() =>
				{
					this.activityIndicator.StopAnimating();
				});
			};
			tableView.Source = source;

			//if (this.AreaViewModel != null)
			//{
			//	this.SetBinding(() => this.AreaViewModel.FilteredModels).WhenSourceChanges(() =>
			//	{
			//		this.activityIndicator.StopAnimating();
			//		tableView.ReloadData();
			//	});
			//}

			this.modelSearchBar.TextChanged += (object sender, UISearchBarTextChangedEventArgs e) =>
			{
				timer.Start();
				InvokeOnMainThread(() =>
				{
					if (this.modelSearchBar.Text.Length <= AreaViewModel.ApplicationController.SearchThreshold) {
						this.activityIndicator.StopAnimating();
					}
				});
			};
		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(animated);
			this.AreaViewModel.ModelName = this.modelSearchBar.Text = "";
		}

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
            this.modelSearchBar.BecomeFirstResponder();
        }
    }
}
