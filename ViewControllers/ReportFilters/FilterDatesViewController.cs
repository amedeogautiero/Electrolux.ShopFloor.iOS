// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using CoreGraphics;
using Electrolux.ShopFloor.iOS.ViewControllers;
using Electrolux.ShopFloor.Middleware.Manager;
using Electrolux.ShopFloor.Mvvm.ViewModels;
using Electrolux.ShopFloor.Mvvm.ViewModels.Units;
using Foundation;
using GalaSoft.MvvmLight.Helpers;
using UIKit;

namespace Electrolux.ShopFloor.iOS
{
	public partial class FilterDatesViewController : BaseFilterViewController
	{
		private DatePickerPopoverViewController dateFromPopoverController;
		private DatePickerPopoverViewController dateToPopoverController;

		public FilterDatesViewController(IntPtr handle) : base(handle)
		{
		}

		public override void Translations()
		{
			this.dateToButton.SetTitle(TranslatorManager.GetInstance().GetString("Select End Date"), UIControlState.Normal);
			this.dateFromButton.SetTitle(TranslatorManager.GetInstance().GetString("Select Start Date"), UIControlState.Normal);
		}

		public override void ConfigureArea()
		{
			base.ConfigureArea();

			dateFromPopoverController = new DatePickerPopoverViewController(
				new CGSize(320f, 320f),
				UIPopoverArrowDirection.Up,
				(DateTime date) =>
				{
					this.dateFromButton.SetTitle(date.ToShortDateString(), UIControlState.Normal);
					this.ViewModel.FromDate = date.ToDateTimeOffset();
					dateFromPopoverController.DismissPopover();
				}
			);

			dateToPopoverController = new DatePickerPopoverViewController(
				new CGSize(320f, 320f),
				UIPopoverArrowDirection.Up,
				(DateTime date) =>
				{
					this.dateToButton.SetTitle(date.ToShortDateString(), UIControlState.Normal);
					this.ViewModel.ToDate = date.ToDateTimeOffset();
					dateToPopoverController.DismissPopover();
				}
			);


		}

		public override void RegisterBindingsLocal()
		{
			if (ViewModel == null)
				return;

			this.KeepBindingInMemoryLocal(this.SetBinding(() => this.ViewModel.FromDate).WhenSourceChanges(() =>
			{
				if (this.ViewModel.FromDate.HasValue)
					this.dateFromButton.SetTitle(this.ViewModel.FromDate.Value.ToShortDateString(), UIControlState.Normal);
				else
					this.dateFromButton.SetTitle(TranslatorManager.GetInstance().GetString("Select Start Date"), UIControlState.Normal);

			}));

			this.KeepBindingInMemoryLocal(this.SetBinding(() => this.ViewModel.ToDate).WhenSourceChanges(() =>
			{
				if (this.ViewModel.ToDate.HasValue)
					this.dateToButton.SetTitle(this.ViewModel.ToDate.Value.ToShortDateString(), UIControlState.Normal);
				else
					this.dateToButton.SetTitle(TranslatorManager.GetInstance().GetString("Select End Date"), UIControlState.Normal);

			}));

			this.KeepBindingInMemoryLocal(this.SetBinding(() => this.ViewModel.HasFiltersDidReset).WhenSourceChanges(() =>
			{
				this.dateToButton.SetTitle(TranslatorManager.GetInstance().GetString("Select End Date"), UIControlState.Normal);
				this.dateFromButton.SetTitle(TranslatorManager.GetInstance().GetString("Select Start Date"), UIControlState.Normal);

			}));
		}

		partial void dateFromAction(Foundation.NSObject sender)
		{
			this.dateFromPopoverController.ShowPopover(sender as UIView);
		}

		partial void dateToAction(Foundation.NSObject sender)
		{
			this.dateToPopoverController.ShowPopover(sender as UIView);
		}
	}


}
