// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Electrolux.ShopFloor.iOS.ViewControllers;
using Electrolux.ShopFloor.Middleware.Manager;
using Electrolux.ShopFloor.Mvvm.ViewModels.EditingAreas;
using Electrolux.ShopFloor.Mvvm.ViewModels.Units;
using Foundation;
using GalaSoft.MvvmLight.Helpers;
using UIKit;

namespace Electrolux.ShopFloor.iOS
{
	public partial class ShopInformationViewController : DetailBaseViewController<ShopInfoViewModel>
	{
		private PopoverViewController<WeatherUnit> weatherPopoverController;
		private PopoverViewController<TrafficUnit> trafficPopoverController;

		public ShopInformationViewController(IntPtr handle) : base(handle)
		{
		}

		public override void RegisterBindingsLocal()
		{
			if (this.AreaViewModel != null)
			{
				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.TotalCustomers,
					this,
					() => this.NumbersOfCustomersContactedTextField.Text,
					BindingMode.TwoWay));

				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.TotalCustomersWhoBought,
					this,
					() => this.NumebersOfCustomersWhoHavePurchasedTextField.Text,
					BindingMode.TwoWay));

				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.SelectedTraffic.Text,
					this,
					() => this.DailyTrafficTextField.Text,
					BindingMode.OneWay));

				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.SelectedWeather.Text,
					this,
					() => this.WeatherTextField.Text,
					BindingMode.OneWay));


				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.TotalCustomersErrorMessage,
					this,
					() => this.NumbersOfCustomersContactedMessageLabel.Text,
					BindingMode.TwoWay));

				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.TotalCustomersWhoBoughtErrorMessage,
					this,
					() => this.NumebersOfCustomersWhoHavePurchasedMessageLabel.Text,
					BindingMode.TwoWay));

				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.TrafficErrorMessage,
					this,
					() => this.DailyTrafficMessageLabel.Text,
					BindingMode.TwoWay));

				KeepBindingInMemoryLocal(new Binding<string, string>(
					this.AreaViewModel,
					() => this.AreaViewModel.WeatherErrorMessage,
					this,
					() => this.WeatherMessageLabel.Text,
					BindingMode.TwoWay));

			}
		}

		public override void Translations()
		{
			this.NumbersOfCustomersContactedLabel.Text = TranslatorManager.GetInstance().GetString("Customer Contacted");
			this.NumebersOfCustomersWhoHavePurchasedLabel.Text = TranslatorManager.GetInstance().GetString("Customer Purchased");
			this.DailyTrafficLabel.Text = TranslatorManager.GetInstance().GetString("Daily Traffic");
			this.WeatherLabel.Text = TranslatorManager.GetInstance().GetString("Weather");
		}

		public override void ConfigureArea()
		{
			base.ConfigureArea();

			#region Behaviors

			#region Traffic

			this.DailyTrafficTextField.ShouldBeginEditing += (UITextField textField) =>
			{
				trafficPopoverController.ShowPopover(textField);
				return false;
			};

			trafficPopoverController = new PopoverViewController<TrafficUnit>(
				this.AreaViewModel.TrafficInfos,
				new CGSize(this.DailyTrafficTextField.Frame.Size.Width, 120f),
				"DailyTrafficViewCell",
				UIPopoverArrowDirection.Any,
				(UITableViewCell cell) =>
				{
					if (cell is DailyTrafficViewCell)
					{
						this.AreaViewModel.SelectedTraffic = ((DailyTrafficViewCell)cell).Item;

						trafficPopoverController.DismissPopover();
					}
				}
			);

			#endregion

			#region Weather

			this.WeatherTextField.ShouldBeginEditing += (UITextField textField) =>
			{
				weatherPopoverController.ShowPopover(textField);
				return false;
			};

			weatherPopoverController = new PopoverViewController<WeatherUnit>(
				this.AreaViewModel.WeatherInfos,
				new CGSize(this.WeatherTextField.Frame.Size.Width, 120f),
				"WeatherViewCell",
				UIPopoverArrowDirection.Any,
				(UITableViewCell cell) =>
				{
					if (cell is WeatherViewCell)
					{
						this.AreaViewModel.SelectedWeather = ((WeatherViewCell)cell).Item;

						weatherPopoverController.DismissPopover();
					}
				}
			);
			#endregion

			#endregion
		}
	}
}